•	1.5x speed 
•	Turn on subtitles
•	Watch first
•	Watch again but take notes, like summarize or bullet list stuff in the video
•	take a break when timer expires

Module (chapter 6) – Databases and things
https://cgp-oex.wgu.edu/courses/course-v1:WGUx+OEX0032+v01/courseware/04c9f97860cb4a2abb91f13af016e906/efd58940e8f0457da8370b7dc70c5b46/2?activate_block_id=block-v1%3AWGUx%2BOEX0032%2Bv01%2Btype%40vertical%2Bblock%40b3e0759b073b4a6bb22b41f167e49d31

AWS Academy Module 6 Activities
Chapter 6 (Module 6) notes
-------------------------------------------------------------------------------
"Computing (Database Services)" (new tab) (1:16)
-------------------------------------------------------------------------------
SQL category RDS and Redshift
RDS has 6 possible engines (now 7) including MySQL and Oracle – M$ SQL, oracle, PostgreSQL, MariaDB, MySQL, AMZ Aurora PostresSQL-compatable edition

For NoSQL:
DynamoDB, Neptune and ElastiCache

•	DynamoDB supports document key-value store models and transactional workloads
•	Neptune is a graph database that supports applications that manipulate highly connected datasets
•	Some features include: continuous backup to S3 and point-in time recovery with replication across AZs
•	ElastiCache is for In-Memory data store and cache that supports (open source) Redis and Memcache engines. Some features include: configure and launch cache nodes via Management console & and supports Memcache and Redis
SQL and NoSQL
Think of NoSQL as “not only SQL”
NoSQL databases scale horizontally by increasing servers
SQL is rows and column think like excel
NoSQL is key-value and each row doesn’t have to contain data for each column
Schemas: SQL is Fixed, NoSQL is Dynamic
Scalability: SQL is Vertical, NoSQL is Horizontal 
Data in NoSQL databases is queried by focusing on collections of documents.

-Database usage scenarios-
Name: 		Best Used for:
RDS		Transactional stuff like ERP, CRM and ecommerce to log 
Aurora		Aurora differentiator: open source, higher performance than RDS (Aurora is SQL)
RedShift	Analytic applications for operational reporting and querying TB to EB scale data, think large warehouse data (data from multiple sources into one)
Neptune	Applications with use cases that require navigation of highly connected data like social news feeds, fraud detection and recommendations
DynamoDB	internet scale applications like hospitality, dating and ridesharing that need to serve content and store structured and unstructured data
Unsupported database engines or versions can be run using Ec2
Each DB has a primary use case – make sure you are familiar with it, things to think of like: is the workload transactional, does it preform analytics, or does it require in memory cache?
Primary use cases in a nut shell
RDS – transactionS
Aurora (both available in Serverless and server forms – it’s a relational database compatible with MySQL and PostgreSQL.
Neptune - graph use cases such as recommendation engines, fraud detection, knowledge graphs, drug discovery, and network security. Neptune is highly available, with read replicas, point-in-time recovery, continuous backup to Amazon S3, and replication across Availability Zones.
RedShift - used as a centralized repository that stores data from different sources in a unified schema and structure to create a single source of truth. This can then feed enterprise-wide reporting and analytics.
DynamoDB
https://www.mongodb.com/databases/data-lake-vs-data-warehouse-vs-database
-------------------------------------------------------------------------------
"AWS Database Services" (new tab) (6:07)
-------------------------------------------------------------------------------
RDS is a fully-managed (SAAS) relational database service thatprovides six familiar database engines to choose from: Amazon Aurora,MySQL, MariaDB, Oracle, Microsoft SQL Server, and PostgreSQL.
RDS supports three types of instance classes: Standard, Memory Optimized, and Burstable Performance.
RDS provides three storage types: General Purpose SSD (also known as gp2), Provisioned IOPS SSD (also known as io1), and magnetic.
RDS automatically does periodic backups (because it is fully managed)
Backup options are Automatic and Manual
After a DB instance is restored you must add the DB instance to the security group used by the DB instance used to create the DB snapshot if you want the same functionality as the previous DB instance
-------------------------------------------------------------------------------
"Amazon Relational Database Service (Amazon RDS)" (new tab) (7:22)
-------------------------------------------------------------------------------
See above I messed up and mixed the top two sections
-------------------------------------------------------------------------------
"Amazon Aurora" (new tab) (3:14)
-------------------------------------------------------------------------------
Aurora is compatible with MySQL and PostgreSQL
Aurora is faster than a standard SQL and PostgreSQL
Accepts familiar SQL queries 
Server less version offers on-demand auto scaling
Stores 6 copies of data across 3 AZs (Think 6 and 3 for Aurora)
Aurora only does read replicas and you can do up to 15, multiple replicas can distribute the read workload
Each DB cluster has one primary instance
-------------------------------------------------------------------------------
"Amazon DynamoDB" (new tab) (5:54)
-------------------------------------------------------------------------------
Reliable Non-relational
Fully managed SAAS product that can do point in time recovery, backup and restore for all your tables
Ties in with IAM for access controls 
Supports storing stuff in the form of JSON documents for storing, querying, and updating
Integrates with CloudWatch so you can see throughput and latency request statistics 
DynamoDB stores things in tables which contains items with attributes – this is similar to rows or tuples and attributes as columns
-------------------------------------------------------------------------------
"Amazon Database Migration Service (Amazon DMS)" (new tab) (6:57)
-------------------------------------------------------------------------------
Supports homogeneous migrations (such as Oracle to Oracle), and also heterogeneous migrations between different database platforms (such as Oracle to MySQL or MySQL to Amazon Aurora).


-------------------------------------------------------------------------------
"Module Wrap-Up" (new tab) (1:13)


Complete the Module 6 knowledge check
•	Amazon Aurora is a compatible database that is up to 5 times faster than standard MySQL database. Availability and performance is enhanced by enabling multiple replicas.
•	Amazon Aurora can have up to 15 Aurora Replicas for a single DB cluster within an AWS Region 
•	Global Tables are a feature of Amazon DynamoDB builds a global footprint by replicating tables automatically across selected regions
•	Amazon Neptune should be prioritized for the banks database if they want to graph connected data. Neptune is best for graph database service
•	AWS Database Migration Service can automatically convert data from a MySQL database to Amz Aurora.
•	Amazon Relational Database Service(Amazon RDS) will handle all routine database tasks such as patching and backups
•	NoSQL database schemas are dynamic 
•	Amazon Relations Database Service(Amazon RDS) manages PostreSQL (RDS service manages Postgres)
•	Amazon DynamoDB is a NoSQL database option
•	Amazon Aurora should be considered if there is a need for a MySQL and PostgreSQL compatible relational database
•	The max number of read replicas that an Amazon Aurora database cluster can have is 15

NoSQL - 
